exit status: 0

stdout = """
def sym: fun(@A: Type, @a: A, @b: A) -> Eq(@A, a, b) -> Eq(@A, b, a) =
    fun(@A: Type, @a: A, @b: A, a_eq_b: Eq(@A, a, b)) =>
        let p: A -> Type = fun(x: A) => Eq(@A, x, a);
        let p_a: Eq(@A, a, a) = refl(@A, a);
        let goal: Eq(@A, b, a) = subst(@A, @a, @b, @p, a_eq_b, p_a);
        goal;
def trans: fun(@A: Type, @a: A, @b: A, @c: A) -> Eq(@A, a, b) ->
    Eq(@A, b, c) -> Eq(@A, a, c) =
    fun(@A: Type, @a: A, @b: A, @c: A, a_eq_b: Eq(@A, a, b), b_eq_c: Eq(@A, b, c)) =>
        let p: A -> Type = fun(x: A) => Eq(@A, a, x);
        let p_b: Eq(@A, a, b) = a_eq_b;
        let goal: Eq(@A, a, c) = subst(@A, @b, @c, @p, b_eq_c, p_b);
        goal;
def cong: fun(@A: Type, @B: Type, @a: A, @b: A, f: A -> B) -> Eq(@A, a, b) ->
    Eq(@B, f(a), f(b)) =
    fun(@A: Type, @B: Type, @a: A, @b: A, f: A -> B, a_eq_b: Eq(@A, a, b)) =>
        let p: A -> Type = fun(x: A) => Eq(@B, f(a), f(x));
        let p_a: Eq(@B, f(a), f(a)) = refl(@B, f(a));
        let goal: Eq(@B, f(a), f(b)) = subst(@A, @a, @b, @p, a_eq_b, p_a);
        goal;
def cong-app: fun(@A: Type, @B: Type, a: A, f: A -> B, g: A -> B) ->
    Eq(@A -> B, f, g) -> Eq(@B, f(a), g(a)) =
    fun(@A: Type, @B: Type, a: A, f: A -> B, g: A -> B, f_eq_g: Eq(@A ->
        B, f, g)) =>
        let p: (A -> B) -> Type = fun(x: A -> B) => Eq(@B, f(a), x(a));
        let p_f: Eq(@B, f(a), f(a)) = refl(@B, f(a));
        let goal: Eq(@B, f(a), g(a)) = subst(@A -> B, @f, @g, @p, f_eq_g, p_f);
        goal;
def not: Bool -> Bool =
    fun(b: Bool) => bool_rec(b, fun(_: Bool) => Bool, false, true);
def and: Bool -> Bool -> Bool =
    fun(a: Bool, b: Bool) => bool_rec(a, fun(_: Bool) => Bool, b, false);
def or: Bool -> Bool -> Bool =
    fun(a: Bool, b: Bool) => bool_rec(a, fun(_: Bool) => Bool, true, b);
def xor: Bool -> Bool -> Bool =
    fun(a: Bool, b: Bool) => bool_rec(a, fun(_: Bool) => Bool, not(b), b);
def not_false_eq_true: Eq(@Bool, true, true) = refl(@Bool, true);
def not_true_eq_false: Eq(@Bool, false, false) = refl(@Bool, false);
def not_self_inverse: fun(b: Bool) ->
    Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) =>
        Bool, false, true), fun(_: Bool) => Bool, false, true), b) =
    fun(b: Bool) =>
        let p: Bool -> Type = fun(a: Bool) => Eq(@Bool, not(not(a)), a);
        let p_true: Eq(@Bool, true, true) = refl(@Bool, true);
        let p_false: Eq(@Bool, false, false) = refl(@Bool, false);
        bool_rec(b, p, p_true, p_false);
def and_left_identity: fun(a: Bool) -> Eq(@Bool, a, a) =
    fun(a: Bool) =>
        let p: Bool -> Type = fun(x: Bool) => Eq(@Bool, and(true, x), x);
        let p_true: Eq(@Bool, true, true) = refl(@Bool, true);
        let p_false: Eq(@Bool, false, false) = refl(@Bool, false);
        bool_rec(a, p, p_true, p_false);
def and_right_identity: fun(a: Bool) ->
    Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a) =
    fun(a: Bool) =>
        let p: Bool -> Type = fun(x: Bool) => Eq(@Bool, and(x, true), x);
        let p_true: Eq(@Bool, true, true) = refl(@Bool, true);
        let p_false: Eq(@Bool, false, false) = refl(@Bool, false);
        bool_rec(a, p, p_true, p_false);
def and_left_absorb: Bool -> Eq(@Bool, false, false) =
    fun(a: Bool) =>
        let p: Bool -> Type = fun(x: Bool) => Eq(@Bool, and(false, x), false);
        let p_true: Eq(@Bool, false, false) = refl(@Bool, false);
        let p_false: Eq(@Bool, false, false) = refl(@Bool, false);
        bool_rec(a, p, p_true, p_false);
def and_right_absorb: fun(a: Bool) ->
    Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false) =
    fun(a: Bool) =>
        let p: Bool -> Type = fun(x: Bool) => Eq(@Bool, and(x, false), false);
        let p_true: Eq(@Bool, false, false) = refl(@Bool, false);
        let p_false: Eq(@Bool, false, false) = refl(@Bool, false);
        bool_rec(a, p, p_true, p_false);
def and_commutative: fun(a: Bool, b: Bool) ->
    Eq(@Bool, bool_rec(a, fun(_: Bool) =>
        Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false)) =
    fun(a: Bool, b: Bool) =>
        let p: Bool -> Type = fun(x: Bool) => Eq(@Bool, and(x, b), and(b, x));
        let p_true: Eq(@Bool, b, bool_rec(b, fun(_: Bool) =>
            Bool, true, false)) =
            let x: Eq(@Bool, b, b) = and_left_identity(b);
            let y: Eq(@Bool, bool_rec(b, fun(_: Bool) =>
                Bool, true, false), b) = and_right_identity(b);
            trans(@Bool, @b, @b, @bool_rec(b, fun(_: Bool) =>
                Bool, true, false), x, sym(@Bool, @bool_rec(b, fun(_: Bool) =>
                Bool, true, false), @b, y));
        let p_false: Eq(@Bool, false, bool_rec(b, fun(_: Bool) =>
            Bool, false, false)) =
            let x: Eq(@Bool, false, false) = and_left_absorb(b);
            let y: Eq(@Bool, bool_rec(b, fun(_: Bool) =>
                Bool, false, false), false) = and_right_absorb(b);
            trans(@Bool, @false, @false, @bool_rec(b, fun(_: Bool) =>
                Bool, false, false), x, sym(@Bool, @bool_rec(b, fun(_: Bool) =>
                Bool, false, false), @false, y));
        bool_rec(a, p, p_true, p_false);
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
268..319 | fun(@A: Type, @a: ...q(a, b) -> Eq(b, a) | Type
276..280 | Type                                     | Type
286..287 | A                                        | Type
293..294 | A                                        | Type
299..301 | Eq                                       | fun(@A: Type) -> A -> A -> Type
299..307 | Eq(a, b)                                 | Type
299..319 | Eq(a, b) -> Eq(b, a)                     | Type
302..303 | a                                        | A
305..306 | b                                        | A
311..313 | Eq                                       | fun(@A: Type) -> A -> A -> Type
311..319 | Eq(b, a)                                 | Type
314..315 | b                                        | A
317..318 | a                                        | A
326..488 | fun(a_eq_b) =>\n  ...p_a);\n        goal | fun(@A: Type, @a: A, @b: A) -> Eq(@A, a, b) -> Eq(@A, b, a)
349..488 | let p = fun(x) => ...p_a);\n        goal | Eq(@A, b, a)
357..379 | fun(x) => Eq(@A, x, a)                   | A -> Type
367..369 | Eq                                       | fun(@A: Type) -> A -> A -> Type
367..379 | Eq(@A, x, a)                             | Type
371..372 | A                                        | Type
374..375 | x                                        | A
377..378 | a                                        | A
389..488 | let p_a:  p(a) = r...p_a);\n        goal | Eq(@A, b, a)
399..400 | p                                        | A -> Type
399..403 | p(a)                                     | Type
401..402 | a                                        | A
406..410 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
406..413 | refl(a)                                  | Eq(@A, a, a)
411..412 | a                                        | A
423..488 | let goal: p(b) = s...p_a);\n        goal | Eq(@A, b, a)
433..434 | p                                        | A -> Type
433..437 | p(b)                                     | Type
435..436 | b                                        | A
440..445 | subst                                    | fun(@A: Type, @x: A, @y: A, @p: A -> Type) -> Eq(@A, x, y) -> p(x) -> p(y)
440..474 | subst(@A, @a, @b, @p, a_eq_b, p_a)       | Eq(@A, b, a)
447..448 | A                                        | Type
451..452 | a                                        | A
455..456 | b                                        | A
459..460 | p                                        | A -> Type
462..468 | a_eq_b                                   | Eq(@A, a, b)
470..473 | p_a                                      | Eq(@A, a, a)
484..488 | goal                                     | Eq(@A, b, a)
511..581 | fun(@A: Type, @a: ...q(b, c) -> Eq(a, c) | Type
519..523 | Type                                     | Type
529..530 | A                                        | Type
536..537 | A                                        | Type
543..544 | A                                        | Type
549..551 | Eq                                       | fun(@A: Type) -> A -> A -> Type
549..557 | Eq(a, b)                                 | Type
549..581 | Eq(a, b) -> Eq(b, c) -> Eq(a, c)         | Type
552..553 | a                                        | A
555..556 | b                                        | A
561..563 | Eq                                       | fun(@A: Type) -> A -> A -> Type
561..569 | Eq(b, c)                                 | Type
561..581 | Eq(b, c) -> Eq(a, c)                     | Type
564..565 | b                                        | A
567..568 | c                                        | A
573..575 | Eq                                       | fun(@A: Type) -> A -> A -> Type
573..581 | Eq(a, c)                                 | Type
576..577 | a                                        | A
579..580 | c                                        | A
588..756 | fun(a_eq_b, b_eq_c...p_b);\n        goal | fun(@A: Type, @a: A, @b: A, @c: A) -> Eq(@A, a, b) -> Eq(@A, b, c) -> Eq(@A, a, c)
619..756 | let p = fun(x) => ...p_b);\n        goal | Eq(@A, a, c)
627..649 | fun(x) => Eq(@A, a, x)                   | A -> Type
637..639 | Eq                                       | fun(@A: Type) -> A -> A -> Type
637..649 | Eq(@A, a, x)                             | Type
641..642 | A                                        | Type
644..645 | a                                        | A
647..648 | x                                        | A
659..756 | let p_b: p(b) = a_...p_b);\n        goal | Eq(@A, a, c)
668..669 | p                                        | A -> Type
668..672 | p(b)                                     | Type
670..671 | b                                        | A
675..681 | a_eq_b                                   | Eq(@A, a, b)
691..756 | let goal: p(c) = s...p_b);\n        goal | Eq(@A, a, c)
701..702 | p                                        | A -> Type
701..705 | p(c)                                     | Type
703..704 | c                                        | A
708..713 | subst                                    | fun(@A: Type, @x: A, @y: A, @p: A -> Type) -> Eq(@A, x, y) -> p(x) -> p(y)
708..742 | subst(@A, @b, @c, @p, b_eq_c, p_b)       | Eq(@A, a, c)
715..716 | A                                        | Type
719..720 | b                                        | A
723..724 | c                                        | A
727..728 | p                                        | A -> Type
730..736 | b_eq_c                                   | Eq(@A, b, c)
738..741 | p_b                                      | Eq(@A, a, b)
752..756 | goal                                     | Eq(@A, a, c)
778..856 | fun(@A: Type, @B: ...) -> Eq(f(a), f(b)) | Type
786..790 | Type                                     | Type
796..800 | Type                                     | Type
806..807 | A                                        | Type
813..814 | A                                        | Type
819..820 | A                                        | Type
819..825 | A -> B                                   | Type
824..825 | B                                        | Type
830..832 | Eq                                       | fun(@A: Type) -> A -> A -> Type
830..838 | Eq(a, b)                                 | Type
830..856 | Eq(a, b) -> Eq(f(a), f(b))               | Type
833..834 | a                                        | A
836..837 | b                                        | A
842..844 | Eq                                       | fun(@A: Type) -> A -> A -> Type
842..856 | Eq(f(a), f(b))                           | Type
845..846 | f                                        | A -> B
845..849 | f(a)                                     | B
847..848 | a                                        | A
851..852 | f                                        | A -> B
851..855 | f(b)                                     | B
853..854 | b                                        | A
863..1037 | fun(f, a_eq_b) =>\...p_a);\n        goal | fun(@A: Type, @B: Type, @a: A, @b: A, f: A -> B) -> Eq(@A, a, b) -> Eq(@B, f(a), f(b))
889..1037 | let p = fun(x) => ...p_a);\n        goal | Eq(@B, f(a), f(b))
897..925 | fun(x) => Eq(@B, f(a), f(x))             | A -> Type
907..909 | Eq                                       | fun(@A: Type) -> A -> A -> Type
907..925 | Eq(@B, f(a), f(x))                       | Type
911..912 | B                                        | Type
914..915 | f                                        | A -> B
914..918 | f(a)                                     | B
916..917 | a                                        | A
920..921 | f                                        | A -> B
920..924 | f(x)                                     | B
922..923 | x                                        | A
935..1037 | let p_a:  p(a) = r...p_a);\n        goal | Eq(@B, f(a), f(b))
945..946 | p                                        | A -> Type
945..949 | p(a)                                     | Type
947..948 | a                                        | A
952..956 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
952..962 | refl(f(a))                               | Eq(@B, f(a), f(a))
957..958 | f                                        | A -> B
957..961 | f(a)                                     | B
959..960 | a                                        | A
972..1037 | let goal: p(b) = s...p_a);\n        goal | Eq(@B, f(a), f(b))
982..983 | p                                        | A -> Type
982..986 | p(b)                                     | Type
984..985 | b                                        | A
989..994 | subst                                    | fun(@A: Type, @x: A, @y: A, @p: A -> Type) -> Eq(@A, x, y) -> p(x) -> p(y)
989..1023 | subst(@A, @a, @b, @p, a_eq_b, p_a)       | Eq(@B, f(a), f(b))
996..997 | A                                        | Type
1000..1001 | a                                        | A
1004..1005 | b                                        | A
1008..1009 | p                                        | A -> Type
1011..1017 | a_eq_b                                   | Eq(@A, a, b)
1019..1022 | p_a                                      | Eq(@B, f(a), f(a))
1033..1037 | goal                                     | Eq(@B, f(a), f(b))
1063..1144 | fun(@A: Type, @B: ...) -> Eq(f(a), g(a)) | Type
1071..1075 | Type                                     | Type
1081..1085 | Type                                     | Type
1090..1091 | A                                        | Type
1096..1097 | A                                        | Type
1096..1102 | A -> B                                   | Type
1101..1102 | B                                        | Type
1107..1108 | A                                        | Type
1107..1113 | A -> B                                   | Type
1112..1113 | B                                        | Type
1118..1120 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1118..1126 | Eq(f, g)                                 | Type
1118..1144 | Eq(f, g) -> Eq(f(a), g(a))               | Type
1121..1122 | f                                        | A -> B
1124..1125 | g                                        | A -> B
1130..1132 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1130..1144 | Eq(f(a), g(a))                           | Type
1133..1134 | f                                        | A -> B
1133..1137 | f(a)                                     | B
1135..1136 | a                                        | A
1139..1140 | g                                        | A -> B
1139..1143 | g(a)                                     | B
1141..1142 | a                                        | A
1151..1337 | fun(a, f, g, f_eq_...p_f);\n        goal | fun(@A: Type, @B: Type, a: A, f: A -> B, g: A -> B) -> Eq(@A -> B, f, g) -> Eq(@B, f(a), g(a))
1183..1337 | let p = fun(x : A ...p_f);\n        goal | Eq(@B, f(a), g(a))
1191..1228 | fun(x : A -> B) => Eq(@B, f(a), x(a))    | (A -> B) -> Type
1199..1200 | A                                        | Type
1199..1205 | A -> B                                   | Type
1204..1205 | B                                        | Type
1210..1212 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1210..1228 | Eq(@B, f(a), x(a))                       | Type
1214..1215 | B                                        | Type
1217..1218 | f                                        | A -> B
1217..1221 | f(a)                                     | B
1219..1220 | a                                        | A
1223..1224 | x                                        | A -> B
1223..1227 | x(a)                                     | B
1225..1226 | a                                        | A
1238..1337 | let p_f: p(f) = re...p_f);\n        goal | Eq(@B, f(a), g(a))
1247..1248 | p                                        | (A -> B) -> Type
1247..1251 | p(f)                                     | Type
1249..1250 | f                                        | A -> B
1254..1258 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
1254..1261 | refl(_)                                  | Eq(@B, f(a), f(a))
1259..1260 | _                                        | ?27(A, B, a, f, g, f_eq_g)
1271..1337 | let goal = subst(@...p_f);\n        goal | Eq(@B, f(a), g(a))
1282..1287 | subst                                    | fun(@A: Type, @x: A, @y: A, @p: A -> Type) -> Eq(@A, x, y) -> p(x) -> p(y)
1282..1323 | subst(@(A -> B), @...g, @p, f_eq_g, p_f) | Eq(@B, f(a), g(a))
1290..1291 | A                                        | Type
1290..1296 | A -> B                                   | Type
1295..1296 | B                                        | Type
1300..1301 | f                                        | A -> B
1304..1305 | g                                        | A -> B
1308..1309 | p                                        | (A -> B) -> Type
1311..1317 | f_eq_g                                   | Eq(@A -> B, f, g)
1319..1322 | p_f                                      | Eq(@B, f(a), f(a))
1333..1337 | goal                                     | Eq(@B, f(a), g(a))
1358..1362 | Bool                                     | Type
1358..1370 | Bool -> Bool                             | Type
1366..1370 | Bool                                     | Type
1377..1427 | fun(b) => bool_rec... Bool, false, true) | Bool -> Bool
1387..1395 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
1387..1427 | bool_rec(b, fun(_) => Bool, false, true) | Bool
1396..1397 | b                                        | Bool
1399..1413 | fun(_) => Bool                           | Bool -> Type
1409..1413 | Bool                                     | Type
1415..1420 | false                                    | Bool
1422..1426 | true                                     | Bool
1439..1443 | Bool                                     | Type
1439..1459 | Bool -> Bool -> Bool                     | Type
1447..1451 | Bool                                     | Type
1447..1459 | Bool -> Bool                             | Type
1455..1459 | Bool                                     | Type
1466..1516 | fun(a, b) => bool_... => Bool, b, false) | Bool -> Bool -> Bool
1479..1487 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
1479..1516 | bool_rec(a, fun(_) => Bool, b, false)    | Bool
1488..1489 | a                                        | Bool
1491..1505 | fun(_) => Bool                           | Bool -> Type
1501..1505 | Bool                                     | Type
1507..1508 | b                                        | Bool
1510..1515 | false                                    | Bool
1527..1531 | Bool                                     | Type
1527..1547 | Bool -> Bool -> Bool                     | Type
1535..1539 | Bool                                     | Type
1535..1547 | Bool -> Bool                             | Type
1543..1547 | Bool                                     | Type
1554..1603 | fun(a, b) => bool_...) => Bool, true, b) | Bool -> Bool -> Bool
1567..1575 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
1567..1603 | bool_rec(a, fun(_) => Bool, true, b)     | Bool
1576..1577 | a                                        | Bool
1579..1593 | fun(_) => Bool                           | Bool -> Type
1589..1593 | Bool                                     | Type
1595..1599 | true                                     | Bool
1601..1602 | b                                        | Bool
1615..1619 | Bool                                     | Type
1615..1635 | Bool -> Bool -> Bool                     | Type
1623..1627 | Bool                                     | Type
1623..1635 | Bool -> Bool                             | Type
1631..1635 | Bool                                     | Type
1642..1693 | fun(a, b) => bool_...=> Bool, not(b), b) | Bool -> Bool -> Bool
1655..1663 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
1655..1693 | bool_rec(a, fun(_) => Bool, not(b), b)   | Bool
1664..1665 | a                                        | Bool
1667..1681 | fun(_) => Bool                           | Bool -> Type
1677..1681 | Bool                                     | Type
1683..1686 | not                                      | Bool -> Bool
1683..1689 | not(b)                                   | Bool
1687..1688 | b                                        | Bool
1691..1692 | b                                        | Bool
1719..1721 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1719..1739 | Eq(not(false), true)                     | Type
1722..1725 | not                                      | Bool -> Bool
1722..1732 | not(false)                               | Bool
1726..1731 | false                                    | Bool
1734..1738 | true                                     | Bool
1742..1746 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
1742..1749 | refl(_)                                  | Eq(@Bool, true, true)
1747..1748 | _                                        | ?32
1774..1776 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1774..1794 | Eq(not(true), false)                     | Type
1777..1780 | not                                      | Bool -> Bool
1777..1786 | not(true)                                | Bool
1781..1785 | true                                     | Bool
1788..1793 | false                                    | Bool
1797..1801 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
1797..1804 | refl(_)                                  | Eq(@Bool, false, false)
1802..1803 | _                                        | ?36
1829..1863 | fun(b: Bool) -> Eq(not(not(b)), b)       | Type
1836..1840 | Bool                                     | Type
1845..1847 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1845..1863 | Eq(not(not(b)), b)                       | Type
1848..1851 | not                                      | Bool -> Bool
1848..1859 | not(not(b))                              | Bool
1852..1855 | not                                      | Bool -> Bool
1852..1858 | not(b)                                   | Bool
1856..1857 | b                                        | Bool
1861..1862 | b                                        | Bool
1870..2026 | fun(b) =>\n       ...p, p_true, p_false) | fun(b: Bool) -> Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) => Bool, false, true), fun(_: Bool) => Bool, false, true), b)
1888..2026 | let p = fun(a) => ...p, p_true, p_false) | Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) => Bool, false, true), fun(_: Bool) => Bool, false, true), b)
1896..1924 | fun(a) => Eq(not(not(a)), a)             | Bool -> Type
1906..1908 | Eq                                       | fun(@A: Type) -> A -> A -> Type
1906..1924 | Eq(not(not(a)), a)                       | Type
1909..1912 | not                                      | Bool -> Bool
1909..1920 | not(not(a))                              | Bool
1913..1916 | not                                      | Bool -> Bool
1913..1919 | not(a)                                   | Bool
1917..1918 | a                                        | Bool
1922..1923 | a                                        | Bool
1934..2026 | let p_true = refl(...p, p_true, p_false) | Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) => Bool, false, true), fun(_: Bool) => Bool, false, true), b)
1947..1951 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
1947..1954 | refl(_)                                  | Eq(@?44(b), ?45(b), ?45(b))
1952..1953 | _                                        | ?44(b)
1964..2026 | let p_false = refl...p, p_true, p_false) | Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) => Bool, false, true), fun(_: Bool) => Bool, false, true), b)
1978..1982 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
1978..1985 | refl(_)                                  | Eq(@?47(b), ?48(b), ?48(b))
1983..1984 | _                                        | ?47(b)
1995..2003 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
1995..2026 | bool_rec(b, p, p_true, p_false)          | Eq(@Bool, bool_rec(bool_rec(b, fun(_: Bool) => Bool, false, true), fun(_: Bool) => Bool, false, true), b)
2004..2005 | b                                        | Bool
2007..2008 | p                                        | Bool -> Type
2010..2016 | p_true                                   | Eq(@Bool, true, true)
2018..2025 | p_false                                  | Eq(@Bool, false, false)
2061..2103 | fun(a: Bool) -> Eq...l, and(true, a), a) | Type
2068..2072 | Bool                                     | Type
2077..2079 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2077..2103 | Eq(@Bool, and(true, a), a)               | Type
2081..2085 | Bool                                     | Type
2087..2090 | and                                      | Bool -> Bool -> Bool
2087..2099 | and(true, a)                             | Bool
2091..2095 | true                                     | Bool
2097..2098 | a                                        | Bool
2101..2102 | a                                        | Bool
2110..2267 | fun(a) =>\n       ...p, p_true, p_false) | fun(a: Bool) -> Eq(@Bool, a, a)
2128..2267 | let p = fun(x) => ...p, p_true, p_false) | Eq(@Bool, a, a)
2136..2165 | fun(x) => Eq(and(true, x), x)            | Bool -> Type
2146..2148 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2146..2165 | Eq(and(true, x), x)                      | Type
2149..2152 | and                                      | Bool -> Bool -> Bool
2149..2161 | and(true, x)                             | Bool
2153..2157 | true                                     | Bool
2159..2160 | x                                        | Bool
2163..2164 | x                                        | Bool
2175..2267 | let p_true = refl(...p, p_true, p_false) | Eq(@Bool, a, a)
2188..2192 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2188..2195 | refl(_)                                  | Eq(@?53(a), ?54(a), ?54(a))
2193..2194 | _                                        | ?53(a)
2205..2267 | let p_false = refl...p, p_true, p_false) | Eq(@Bool, a, a)
2219..2223 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2219..2226 | refl(_)                                  | Eq(@?56(a), ?57(a), ?57(a))
2224..2225 | _                                        | ?56(a)
2236..2244 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
2236..2267 | bool_rec(a, p, p_true, p_false)          | Eq(@Bool, a, a)
2245..2246 | a                                        | Bool
2248..2249 | p                                        | Bool -> Type
2251..2257 | p_true                                   | Eq(@Bool, true, true)
2259..2266 | p_false                                  | Eq(@Bool, false, false)
2303..2345 | fun(a: Bool) -> Eq...l, and(a, true), a) | Type
2310..2314 | Bool                                     | Type
2319..2321 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2319..2345 | Eq(@Bool, and(a, true), a)               | Type
2323..2327 | Bool                                     | Type
2329..2332 | and                                      | Bool -> Bool -> Bool
2329..2341 | and(a, true)                             | Bool
2333..2334 | a                                        | Bool
2336..2340 | true                                     | Bool
2343..2344 | a                                        | Bool
2352..2509 | fun(a) =>\n       ...p, p_true, p_false) | fun(a: Bool) -> Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
2370..2509 | let p = fun(x) => ...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
2378..2407 | fun(x) => Eq(and(x, true), x)            | Bool -> Type
2388..2390 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2388..2407 | Eq(and(x, true), x)                      | Type
2391..2394 | and                                      | Bool -> Bool -> Bool
2391..2403 | and(x, true)                             | Bool
2395..2396 | x                                        | Bool
2398..2402 | true                                     | Bool
2405..2406 | x                                        | Bool
2417..2509 | let p_true = refl(...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
2430..2434 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2430..2437 | refl(_)                                  | Eq(@?62(a), ?63(a), ?63(a))
2435..2436 | _                                        | ?62(a)
2447..2509 | let p_false = refl...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
2461..2465 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2461..2468 | refl(_)                                  | Eq(@?65(a), ?66(a), ?66(a))
2466..2467 | _                                        | ?65(a)
2478..2486 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
2478..2509 | bool_rec(a, p, p_true, p_false)          | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
2487..2488 | a                                        | Bool
2490..2491 | p                                        | Bool -> Type
2493..2499 | p_true                                   | Eq(@Bool, true, true)
2501..2508 | p_false                                  | Eq(@Bool, false, false)
2542..2589 | fun(a: Bool) -> Eq...d(false, a), false) | Type
2549..2553 | Bool                                     | Type
2558..2560 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2558..2589 | Eq(@Bool, and(false, a), false)          | Type
2562..2566 | Bool                                     | Type
2568..2571 | and                                      | Bool -> Bool -> Bool
2568..2581 | and(false, a)                            | Bool
2572..2577 | false                                    | Bool
2579..2580 | a                                        | Bool
2583..2588 | false                                    | Bool
2596..2758 | fun(a) =>\n       ...p, p_true, p_false) | Bool -> Eq(@Bool, false, false)
2614..2758 | let p = fun(x) => ...p, p_true, p_false) | Eq(@Bool, false, false)
2622..2656 | fun(x) => Eq(and(false, x), false)       | Bool -> Type
2632..2634 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2632..2656 | Eq(and(false, x), false)                 | Type
2635..2638 | and                                      | Bool -> Bool -> Bool
2635..2648 | and(false, x)                            | Bool
2639..2644 | false                                    | Bool
2646..2647 | x                                        | Bool
2650..2655 | false                                    | Bool
2666..2758 | let p_true = refl(...p, p_true, p_false) | Eq(@Bool, false, false)
2679..2683 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2679..2686 | refl(_)                                  | Eq(@?71(a), ?72(a), ?72(a))
2684..2685 | _                                        | ?71(a)
2696..2758 | let p_false = refl...p, p_true, p_false) | Eq(@Bool, false, false)
2710..2714 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2710..2717 | refl(_)                                  | Eq(@?74(a), ?75(a), ?75(a))
2715..2716 | _                                        | ?74(a)
2727..2735 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
2727..2758 | bool_rec(a, p, p_true, p_false)          | Eq(@Bool, false, false)
2736..2737 | a                                        | Bool
2739..2740 | p                                        | Bool -> Type
2742..2748 | p_true                                   | Eq(@Bool, false, false)
2750..2757 | p_false                                  | Eq(@Bool, false, false)
2792..2839 | fun(a: Bool) -> Eq...d(a, false), false) | Type
2799..2803 | Bool                                     | Type
2808..2810 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2808..2839 | Eq(@Bool, and(a, false), false)          | Type
2812..2816 | Bool                                     | Type
2818..2821 | and                                      | Bool -> Bool -> Bool
2818..2831 | and(a, false)                            | Bool
2822..2823 | a                                        | Bool
2825..2830 | false                                    | Bool
2833..2838 | false                                    | Bool
2846..3008 | fun(a) =>\n       ...p, p_true, p_false) | fun(a: Bool) -> Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
2864..3008 | let p = fun(x) => ...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
2872..2906 | fun(x) => Eq(and(x, false), false)       | Bool -> Type
2882..2884 | Eq                                       | fun(@A: Type) -> A -> A -> Type
2882..2906 | Eq(and(x, false), false)                 | Type
2885..2888 | and                                      | Bool -> Bool -> Bool
2885..2898 | and(x, false)                            | Bool
2889..2890 | x                                        | Bool
2892..2897 | false                                    | Bool
2900..2905 | false                                    | Bool
2916..3008 | let p_true = refl(...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
2929..2933 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2929..2936 | refl(_)                                  | Eq(@?80(a), ?81(a), ?81(a))
2934..2935 | _                                        | ?80(a)
2946..3008 | let p_false = refl...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
2960..2964 | refl                                     | fun(@A: Type, x: A) -> Eq(@A, x, x)
2960..2967 | refl(_)                                  | Eq(@?83(a), ?84(a), ?84(a))
2965..2966 | _                                        | ?83(a)
2977..2985 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
2977..3008 | bool_rec(a, p, p_true, p_false)          | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
2986..2987 | a                                        | Bool
2989..2990 | p                                        | Bool -> Type
2992..2998 | p_true                                   | Eq(@Bool, false, false)
3000..3007 | p_false                                  | Eq(@Bool, false, false)
3041..3097 | fun(a: Bool, b: Bo...d(a, b), and(b, a)) | Type
3048..3052 | Bool                                     | Type
3057..3061 | Bool                                     | Type
3066..3068 | Eq                                       | fun(@A: Type) -> A -> A -> Type
3066..3097 | Eq(@Bool, and(a, b), and(b, a))          | Type
3070..3074 | Bool                                     | Type
3076..3079 | and                                      | Bool -> Bool -> Bool
3076..3085 | and(a, b)                                | Bool
3080..3081 | a                                        | Bool
3083..3084 | b                                        | Bool
3087..3090 | and                                      | Bool -> Bool -> Bool
3087..3096 | and(b, a)                                | Bool
3091..3092 | b                                        | Bool
3094..3095 | a                                        | Bool
3104..3628 | fun(a, b) =>\n    ...p, p_true, p_false) | fun(a: Bool, b: Bool) -> Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false))
3125..3628 | let p = fun(x) => ...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false))
3133..3167 | fun(x) => Eq(and(x, b), and(b, x))       | Bool -> Type
3143..3145 | Eq                                       | fun(@A: Type) -> A -> A -> Type
3143..3167 | Eq(and(x, b), and(b, x))                 | Type
3146..3149 | and                                      | Bool -> Bool -> Bool
3146..3155 | and(x, b)                                | Bool
3150..3151 | x                                        | Bool
3153..3154 | b                                        | Bool
3157..3160 | and                                      | Bool -> Bool -> Bool
3157..3166 | and(b, x)                                | Bool
3161..3162 | b                                        | Bool
3164..3165 | x                                        | Bool
3177..3628 | let p_true: Eq(@Bo...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false))
3189..3191 | Eq                                       | fun(@A: Type) -> A -> A -> Type
3189..3226 | Eq(@Bool, and(true, b), and(b, true))    | Type
3193..3197 | Bool                                     | Type
3199..3202 | and                                      | Bool -> Bool -> Bool
3199..3211 | and(true, b)                             | Bool
3203..3207 | true                                     | Bool
3209..3210 | b                                        | Bool
3213..3216 | and                                      | Bool -> Bool -> Bool
3213..3225 | and(b, true)                             | Bool
3217..3218 | b                                        | Bool
3220..3224 | true                                     | Bool
3241..3342 | let x = and_left_i...   trans(x, sym(y)) | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3249..3266 | and_left_identity                        | fun(a: Bool) -> Eq(@Bool, a, a)
3249..3269 | and_left_identity(b)                     | Eq(@Bool, b, b)
3267..3268 | b                                        | Bool
3283..3342 | let y = and_right_...   trans(x, sym(y)) | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3291..3309 | and_right_identity                       | fun(a: Bool) -> Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, true, false), a)
3291..3312 | and_right_identity(b)                    | Eq(@Bool, bool_rec(b, fun(_: Bool) => Bool, true, false), b)
3310..3311 | b                                        | Bool
3326..3331 | trans                                    | fun(@A: Type, @a: A, @b: A, @c: A) -> Eq(@A, a, b) -> Eq(@A, b, c) -> Eq(@A, a, c)
3326..3342 | trans(x, sym(y))                         | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3332..3333 | x                                        | Eq(@Bool, b, b)
3335..3338 | sym                                      | fun(@A: Type, @a: A, @b: A) -> Eq(@A, a, b) -> Eq(@A, b, a)
3335..3341 | sym(y)                                   | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3339..3340 | y                                        | Eq(@Bool, bool_rec(b, fun(_: Bool) => Bool, true, false), b)
3386..3628 | let p_false: Eq(@B...p, p_true, p_false) | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false))
3399..3401 | Eq                                       | fun(@A: Type) -> A -> A -> Type
3399..3438 | Eq(@Bool, and(false, b), and(b, false))  | Type
3403..3407 | Bool                                     | Type
3409..3412 | and                                      | Bool -> Bool -> Bool
3409..3422 | and(false, b)                            | Bool
3413..3418 | false                                    | Bool
3420..3421 | b                                        | Bool
3424..3427 | and                                      | Bool -> Bool -> Bool
3424..3437 | and(b, false)                            | Bool
3428..3429 | b                                        | Bool
3431..3436 | false                                    | Bool
3453..3550 | let x = and_left_a...   trans(x, sym(y)) | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
3461..3476 | and_left_absorb                          | Bool -> Eq(@Bool, false, false)
3461..3479 | and_left_absorb(b)                       | Eq(@Bool, false, false)
3477..3478 | b                                        | Bool
3493..3550 | let y = and_right_...   trans(x, sym(y)) | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
3501..3517 | and_right_absorb                         | fun(a: Bool) -> Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, false, false), false)
3501..3520 | and_right_absorb(b)                      | Eq(@Bool, bool_rec(b, fun(_: Bool) => Bool, false, false), false)
3518..3519 | b                                        | Bool
3534..3539 | trans                                    | fun(@A: Type, @a: A, @b: A, @c: A) -> Eq(@A, a, b) -> Eq(@A, b, c) -> Eq(@A, a, c)
3534..3550 | trans(x, sym(y))                         | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
3540..3541 | x                                        | Eq(@Bool, false, false)
3543..3546 | sym                                      | fun(@A: Type, @a: A, @b: A) -> Eq(@A, a, b) -> Eq(@A, b, a)
3543..3549 | sym(y)                                   | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
3547..3548 | y                                        | Eq(@Bool, bool_rec(b, fun(_: Bool) => Bool, false, false), false)
3597..3605 | bool_rec                                 | fun(b: Bool, p: Bool -> Type) -> p(true) -> p(false) -> p(b)
3597..3628 | bool_rec(a, p, p_true, p_false)          | Eq(@Bool, bool_rec(a, fun(_: Bool) => Bool, b, false), bool_rec(b, fun(_: Bool) => Bool, a, false))
3606..3607 | a                                        | Bool
3609..3610 | p                                        | Bool -> Type
3612..3618 | p_true                                   | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3620..3627 | p_false                                  | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
273..274 | A                                        | Type
283..284 | a                                        | A
290..291 | b                                        | A
330..336 | a_eq_b                                   | Eq(@A, a, b)
353..354 | p                                        | ?4(A, a, b, a_eq_b)
361..362 | x                                        | ?5(A, a, b, a_eq_b)
393..396 | p_a                                      | Eq(@A, a, a)
427..431 | goal                                     | Eq(@A, b, a)
516..517 | A                                        | Type
526..527 | a                                        | A
533..534 | b                                        | A
540..541 | c                                        | A
592..598 | a_eq_b                                   | Eq(@A, a, b)
600..606 | b_eq_c                                   | Eq(@A, b, c)
623..624 | p                                        | ?13(A, a, b, c, a_eq_b, b_eq_c)
631..632 | x                                        | ?14(A, a, b, c, a_eq_b, b_eq_c)
663..666 | p_b                                      | Eq(@A, a, b)
695..699 | goal                                     | Eq(@A, a, c)
783..784 | A                                        | Type
793..794 | B                                        | Type
803..804 | a                                        | A
810..811 | b                                        | A
816..817 | f                                        | A -> B
867..868 | f                                        | A -> B
870..876 | a_eq_b                                   | Eq(@A, a, b)
893..894 | p                                        | ?19(A, B, a, b, f, a_eq_b)
901..902 | x                                        | ?20(A, B, a, b, f, a_eq_b)
939..942 | p_a                                      | Eq(@B, f(a), f(a))
976..980 | goal                                     | Eq(@B, f(a), f(b))
1068..1069 | A                                        | Type
1078..1079 | B                                        | Type
1087..1088 | a                                        | A
1093..1094 | f                                        | A -> B
1104..1105 | g                                        | A -> B
1155..1156 | a                                        | A
1158..1159 | f                                        | A -> B
1161..1162 | g                                        | A -> B
1164..1170 | f_eq_g                                   | Eq(@A -> B, f, g)
1187..1188 | p                                        | ?26(A, B, a, f, g, f_eq_g)
1195..1196 | x                                        | A -> B
1242..1245 | p_f                                      | Eq(@B, f(a), f(a))
1275..1279 | goal                                     | ?29(A, B, a, f, g, f_eq_g)
1381..1382 | b                                        | Bool
1403..1404 | _                                        | Bool
1470..1471 | a                                        | Bool
1473..1474 | b                                        | Bool
1495..1496 | _                                        | Bool
1558..1559 | a                                        | Bool
1561..1562 | b                                        | Bool
1583..1584 | _                                        | Bool
1646..1647 | a                                        | Bool
1649..1650 | b                                        | Bool
1671..1672 | _                                        | Bool
1833..1834 | b                                        | Bool
1874..1875 | b                                        | Bool
1892..1893 | p                                        | ?40(b)
1900..1901 | a                                        | ?41(b)
1938..1944 | p_true                                   | ?43(b)
1968..1975 | p_false                                  | ?46(b)
2065..2066 | a                                        | Bool
2114..2115 | a                                        | Bool
2132..2133 | p                                        | ?49(a)
2140..2141 | x                                        | ?50(a)
2179..2185 | p_true                                   | ?52(a)
2209..2216 | p_false                                  | ?55(a)
2307..2308 | a                                        | Bool
2356..2357 | a                                        | Bool
2374..2375 | p                                        | ?58(a)
2382..2383 | x                                        | ?59(a)
2421..2427 | p_true                                   | ?61(a)
2451..2458 | p_false                                  | ?64(a)
2546..2547 | a                                        | Bool
2600..2601 | a                                        | Bool
2618..2619 | p                                        | ?67(a)
2626..2627 | x                                        | ?68(a)
2670..2676 | p_true                                   | ?70(a)
2700..2707 | p_false                                  | ?73(a)
2796..2797 | a                                        | Bool
2850..2851 | a                                        | Bool
2868..2869 | p                                        | ?76(a)
2876..2877 | x                                        | ?77(a)
2920..2926 | p_true                                   | ?79(a)
2950..2957 | p_false                                  | ?82(a)
3045..3046 | a                                        | Bool
3054..3055 | b                                        | Bool
3108..3109 | a                                        | Bool
3111..3112 | b                                        | Bool
3129..3130 | p                                        | ?85(a, b)
3137..3138 | x                                        | ?86(a, b)
3181..3187 | p_true                                   | Eq(@Bool, b, bool_rec(b, fun(_: Bool) => Bool, true, false))
3245..3246 | x                                        | ?88(a, b)
3287..3288 | y                                        | ?89(a, b)
3390..3397 | p_false                                  | Eq(@Bool, false, bool_rec(b, fun(_: Bool) => Bool, false, false))
3457..3458 | x                                        | ?97(a, b)
3497..3498 | y                                        | ?98(a, b)
metavars:
?0 = fun(_: #error, _: #error, _: #error) => _#2
?1 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?2 = fun(_: #error, _: #error, _: #error) => _#2
?3 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?4 = fun(_: #error, _: #error, _: #error, _: #error) => _#3 -> Type
?5 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?6 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?7 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?8 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?9 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#5
?10 = fun(_: #error, _: #error, _: #error, _: #error) => _#3
?11 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?12 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#5
?13 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) =>
    _#5 -> Type
?14 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#5
?15 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?16 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?17 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?18 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?19 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) =>
    _#5 -> Type
?20 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#5
?21 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?22 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4 -> _#4
?23 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?24 = fun(_: #error, _: #error, _: #error, _: #error, _: #error) => _#4 -> _#4
?25 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?26 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) =>
    (_#5 -> _#5) -> Type
?27 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) => _#4
?28 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) =>
    _#2(_#3)
?29 = fun(_: #error, _: #error, _: #error, _: #error, _: #error, _: #error) =>
    Eq(@_#4, _#2(_#3), _#1(_#3))
?30 = Bool
?31 = Bool
?32 = Bool
?33 = true
?34 = Bool
?35 = Bool
?36 = Bool
?37 = false
?38 = fun(_: #error) => Bool
?39 = fun(_: #error) => Bool
?40 = fun(_: #error) => Bool -> Type
?41 = fun(_: #error) => Bool
?42 = fun(_: #error, _: #error) => Bool
?43 = fun(_: #error) => Eq(@Bool, true, true)
?44 = fun(_: #error) => Bool
?45 = fun(_: #error) => true
?46 = fun(_: #error) => Eq(@Bool, false, false)
?47 = fun(_: #error) => Bool
?48 = fun(_: #error) => false
?49 = fun(_: #error) => Bool -> Type
?50 = fun(_: #error) => Bool
?51 = fun(_: #error, _: #error) => Bool
?52 = fun(_: #error) => Eq(@Bool, true, true)
?53 = fun(_: #error) => Bool
?54 = fun(_: #error) => true
?55 = fun(_: #error) => Eq(@Bool, false, false)
?56 = fun(_: #error) => Bool
?57 = fun(_: #error) => false
?58 = fun(_: #error) => Bool -> Type
?59 = fun(_: #error) => Bool
?60 = fun(_: #error, _: #error) => Bool
?61 = fun(_: #error) => Eq(@Bool, true, true)
?62 = fun(_: #error) => Bool
?63 = fun(_: #error) => true
?64 = fun(_: #error) => Eq(@Bool, false, false)
?65 = fun(_: #error) => Bool
?66 = fun(_: #error) => false
?67 = fun(_: #error) => Bool -> Type
?68 = fun(_: #error) => Bool
?69 = fun(_: #error, _: #error) => Bool
?70 = fun(_: #error) => Eq(@Bool, false, false)
?71 = fun(_: #error) => Bool
?72 = fun(_: #error) => false
?73 = fun(_: #error) => Eq(@Bool, false, false)
?74 = fun(_: #error) => Bool
?75 = fun(_: #error) => false
?76 = fun(_: #error) => Bool -> Type
?77 = fun(_: #error) => Bool
?78 = fun(_: #error, _: #error) => Bool
?79 = fun(_: #error) => Eq(@Bool, false, false)
?80 = fun(_: #error) => Bool
?81 = fun(_: #error) => false
?82 = fun(_: #error) => Eq(@Bool, false, false)
?83 = fun(_: #error) => Bool
?84 = fun(_: #error) => false
?85 = fun(_: #error, _: #error) => Bool -> Type
?86 = fun(_: #error, _: #error) => Bool
?87 = fun(_: #error, _: #error, _: #error) => Bool
?88 = fun(_: #error, _: #error) => Eq(@Bool, _#0, _#0)
?89 = fun(_: #error, _: #error) =>
    Eq(@Bool, bool_rec(_#0, fun(_: Bool) => Bool, true, false), _#0)
?90 = fun(_: #error, _: #error) => Bool
?91 = fun(_: #error, _: #error) => _#0
?92 = fun(_: #error, _: #error) => _#0
?93 = fun(_: #error, _: #error) => bool_rec(_#0, fun(_: Bool) => Bool, true, false)
?94 = fun(_: #error, _: #error) => Bool
?95 = fun(_: #error, _: #error) => bool_rec(_#0, fun(_: Bool) => Bool, true, false)
?96 = fun(_: #error, _: #error) => _#0
?97 = fun(_: #error, _: #error) => Eq(@Bool, false, false)
?98 = fun(_: #error, _: #error) =>
    Eq(@Bool, bool_rec(_#0, fun(_: Bool) => Bool, false, false), false)
?99 = fun(_: #error, _: #error) => Bool
?100 = fun(_: #error, _: #error) => false
?101 = fun(_: #error, _: #error) => false
?102 = fun(_: #error, _: #error) => bool_rec(_#0, fun(_: Bool) => Bool, false, false)
?103 = fun(_: #error, _: #error) => Bool
?104 = fun(_: #error, _: #error) => bool_rec(_#0, fun(_: Bool) => Bool, false, false)
?105 = fun(_: #error, _: #error) => false
"""

stderr = """

"""
