exit status: 0

stdout = """
def FstType: Type = fun(_: (Type, Type)) -> let A: Type = FIXME_FUN_PARAM_NAME._0;
let B: Type = FIXME_FUN_PARAM_NAME._1;
fun(_: (FIXME_QUOTE_UNNAMED_LOCAL._0, FIXME_QUOTE_UNNAMED_LOCAL._1)) -> let a: FIXME_QUOTE_UNNAMED_LOCAL._0 = FIXME_FUN_PARAM_NAME._0;
let b: FIXME_QUOTE_UNNAMED_LOCAL._1 = FIXME_FUN_PARAM_NAME._1;
A;
types of expressions:
14..60 = Type
26..38 = Type
27..31 = Type
33..37 = Type
48..54 = Type
49..50 = Type
52..53 = Type
59..60 = Type
types of patterns:
18..24 = (Type, Type)
19..20 = Type
22..23 = Type
40..46 = (FIXME_QUOTE_UNNAMED_LOCAL._0, FIXME_QUOTE_UNNAMED_LOCAL._1)
41..42 = FIXME_QUOTE_UNNAMED_LOCAL._0
44..45 = FIXME_QUOTE_UNNAMED_LOCAL._1

def SndType: Type = fun(_: (Type, Type)) -> let A: Type = FIXME_FUN_PARAM_NAME._0;
let B: Type = FIXME_FUN_PARAM_NAME._1;
fun(_: (FIXME_QUOTE_UNNAMED_LOCAL._0, FIXME_QUOTE_UNNAMED_LOCAL._1)) -> let a: FIXME_QUOTE_UNNAMED_LOCAL._0 = FIXME_FUN_PARAM_NAME._0;
let b: FIXME_QUOTE_UNNAMED_LOCAL._1 = FIXME_FUN_PARAM_NAME._1;
B;
types of expressions:
76..122 = Type
88..100 = Type
89..93 = Type
95..99 = Type
110..116 = Type
111..112 = Type
114..115 = Type
121..122 = Type
types of patterns:
80..86 = (Type, Type)
81..82 = Type
84..85 = Type
102..108 = (FIXME_QUOTE_UNNAMED_LOCAL._0, FIXME_QUOTE_UNNAMED_LOCAL._1)
103..104 = FIXME_QUOTE_UNNAMED_LOCAL._0
106..107 = FIXME_QUOTE_UNNAMED_LOCAL._1
"""

stderr = """

"""
