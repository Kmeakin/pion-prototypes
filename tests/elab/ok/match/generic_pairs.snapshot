exit status: 0

stdout = """
def fst1: fun(A: Type, B: Type) -> (A, B) -> A = fun(A: Type, B: Type, p: (A, B)) => let x: A = p._0;
let y: B = p._1;
x;
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
11..75 | fun(A: Type, B: Ty...    (x, y) => x,\n} | fun(A: Type, B: Type) -> (A, B) -> A
18..22 | Type                                     | Type
27..31 | Type                                     | Type
36..42 | (A, B)                                   | Type
37..38 | A                                        | Type
40..41 | B                                        | Type
47..75 | match p {\n    (x, y) => x,\n}           | Unbound(2)
53..54 | p                                        | (Unbound(2), Unbound(2))
71..72 | x                                        | Unbound(4)
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
15..16 | A                                        | Type
24..25 | B                                        | Type
33..34 | p                                        | (Unbound(1), Unbound(1))
61..67 | (x, y)                                   | (Unbound(2), Unbound(2))
62..63 | x                                        | Unbound(2)
65..66 | y                                        | Unbound(1)
metavars:
?0 = fun(a: #error, _: #error, _: #error) => a

def fst2: fun(A: Type, B: Type) -> (A, B) -> A = fun(A: Type, B: Type, p: (A, B)) => let x: A = p._0;
x;
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
89..153 | fun(A: Type, B: Ty...    (x, _) => x,\n} | fun(A: Type, B: Type) -> (A, B) -> A
96..100 | Type                                     | Type
105..109 | Type                                     | Type
114..120 | (A, B)                                   | Type
115..116 | A                                        | Type
118..119 | B                                        | Type
125..153 | match p {\n    (x, _) => x,\n}           | Unbound(2)
131..132 | p                                        | (Unbound(2), Unbound(2))
149..150 | x                                        | Unbound(3)
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
93..94 | A                                        | Type
102..103 | B                                        | Type
111..112 | p                                        | (Unbound(1), Unbound(1))
139..145 | (x, _)                                   | (Unbound(2), Unbound(2))
140..141 | x                                        | Unbound(2)
143..144 | _                                        | Unbound(1)
metavars:
?0 = fun(a: #error, _: #error, _: #error) => a

def snd1: fun(A: Type, B: Type) -> (A, B) -> B = fun(A: Type, B: Type, p: (A, B)) => let x: A = p._0;
let y: B = p._1;
y;
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
167..231 | fun(A: Type, B: Ty...    (x, y) => y,\n} | fun(A: Type, B: Type) -> (A, B) -> B
174..178 | Type                                     | Type
183..187 | Type                                     | Type
192..198 | (A, B)                                   | Type
193..194 | A                                        | Type
196..197 | B                                        | Type
203..231 | match p {\n    (x, y) => y,\n}           | Unbound(1)
209..210 | p                                        | (Unbound(2), Unbound(2))
227..228 | y                                        | Unbound(3)
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
171..172 | A                                        | Type
180..181 | B                                        | Type
189..190 | p                                        | (Unbound(1), Unbound(1))
217..223 | (x, y)                                   | (Unbound(2), Unbound(2))
218..219 | x                                        | Unbound(2)
221..222 | y                                        | Unbound(1)
metavars:
?0 = fun(_: #error, a: #error, _: #error) => a

def snd2: fun(A: Type, B: Type) -> (A, B) -> B = fun(A: Type, B: Type, p: (A, B)) => let y: B = p._1;
y;
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
245..309 | fun(A: Type, B: Ty...    (_, y) => y,\n} | fun(A: Type, B: Type) -> (A, B) -> B
252..256 | Type                                     | Type
261..265 | Type                                     | Type
270..276 | (A, B)                                   | Type
271..272 | A                                        | Type
274..275 | B                                        | Type
281..309 | match p {\n    (_, y) => y,\n}           | Unbound(1)
287..288 | p                                        | (Unbound(2), Unbound(2))
305..306 | y                                        | Unbound(2)
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
249..250 | A                                        | Type
258..259 | B                                        | Type
267..268 | p                                        | (Unbound(1), Unbound(1))
295..301 | (_, y)                                   | (Unbound(2), Unbound(2))
296..297 | _                                        | Unbound(2)
299..300 | y                                        | Unbound(1)
metavars:
?0 = fun(_: #error, a: #error, _: #error) => a
"""

stderr = """

"""
