exit status: 1

stdout = """
def foo: ?1 -> Bool = fun(x: ?1) => false;
def is-zero: Int -> Bool =
    fun(x: Int) => match x {
        0 => true,
        _ => false,
    };
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
10..47 | fun(x) => match x {\n    _ => false,\n}  | ?1 -> Bool
20..47 | match x {\n    _ => false,\n}            | Bool
26..27 | x                                        | ?1
39..44 | false                                    | Bool
64..116 | fun(x) => match x ...n    _ => false,\n} | Int -> Bool
74..116 | match x {\n    0 =...n    _ => false,\n} | Bool
80..81 | x                                        | ?4
93..97 | true                                     | Bool
108..113 | false                                    | Bool
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
14..15 | x                                        | ?1
34..35 | _                                        | ?1
68..69 | x                                        | ?4
88..89 | 0                                        | Int
103..104 | _                                        | Int
metavars:
?0 = ?1 -> Bool
?1 = <unsolved>
?2 = fun(_: #error) => Bool
?3 = Int -> Bool
?4 = Int
?5 = fun(_: #error) => Bool
"""

stderr = """
error: unable to infer pattern type
  ┌─ tests/elab/ok/match/int.pion:1:15
  │
1 │ def foo = fun(x) => match x {
  │               ^

aborting due to 1 previous error
"""
