exit status: 0

stdout = """
def not: Bool -> Bool = fun(x: Bool) => match x {
    false => true,
    true => false,
};
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
10..69 | fun(x) => match x ...  false => true,\n} | Bool -> Bool
20..69 | match x {\n    tru...  false => true,\n} | Bool
26..27 | x                                        | ?0
42..47 | false                                    | Bool
62..66 | true                                     | Bool
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
14..15 | x                                        | ?0
34..38 | true                                     | Bool
53..58 | false                                    | Bool
metavars:
?0 = Bool
?1 = fun(_: #error) => Bool

def bool-to-int: Bool -> Int = fun(x: Bool) => match x {
    false => 0,
    true => 1,
};
types of expressions:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
90..142 | fun(x) => match x ...n    false => 0,\n} | Bool -> Int
100..142 | match x {\n    tru...n    false => 0,\n} | Int
106..107 | x                                        | ?0
122..123 | 1                                        | Int
138..139 | 0                                        | Int
types of patterns:
span   | source                                   | type
-------|------------------------------------------|-----------------------------
94..95 | x                                        | ?0
114..118 | true                                     | Bool
129..134 | false                                    | Bool
metavars:
?0 = Bool
?1 = fun(_: #error) => Int
"""

stderr = """

"""
