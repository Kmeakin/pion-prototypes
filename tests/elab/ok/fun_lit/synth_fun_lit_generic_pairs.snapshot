exit status: 0

stdout = """
def fst: fun(a: (Type, Type)) -> (a._0, a._1) -> _1._0 = fun(a: (Type, Type)) => let A: Type = a._0;
let B: Type = a._1;
fun(b: (a._0, a._1)) => let x: B._0 = b._0;
let y: B._1 = b._1;
x;
types of expressions:
10..56 = fun(a: (Type, Type)) -> (a._0, a._1) -> _1._0
22..34 = Type
23..27 = Type
29..33 = Type
44..50 = Type
45..46 = Type
48..49 = Type
55..56 = Unbound(5)._0
types of patterns:
14..20 = (Type, Type)
15..16 = Type
18..19 = Type
36..42 = (Unbound(2)._0, Unbound(3)._1)
37..38 = _1._0
40..41 = _1._1

def snd: fun(a: (Type, Type)) -> (a._0, a._1) -> _1._1 = fun(a: (Type, Type)) => let A: Type = a._0;
let B: Type = a._1;
fun(b: (a._0, a._1)) => let x: B._0 = b._0;
let y: B._1 = b._1;
y;
types of expressions:
68..114 = fun(a: (Type, Type)) -> (a._0, a._1) -> _1._1
80..92 = Type
81..85 = Type
87..91 = Type
102..108 = Type
103..104 = Type
106..107 = Type
113..114 = Unbound(5)._1
types of patterns:
72..78 = (Type, Type)
73..74 = Type
76..77 = Type
94..100 = (Unbound(2)._0, Unbound(3)._1)
95..96 = _1._0
98..99 = _1._1
"""

stderr = """

"""
